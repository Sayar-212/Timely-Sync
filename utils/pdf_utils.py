from reportlab.lib.pagesizes import LETTER, landscape
from reportlab.lib import colors
from reportlab.platypus import Table, TableStyle, SimpleDocTemplate, Paragraph, Spacer, Image
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.units import inch
from typing import List
from core.constraint_schema import Timetable
import requests
from io import BytesIO

def timetable_to_pdf(tt: Timetable, out_path: str, title: str = "Timetable") -> None:
    styles = getSampleStyleSheet()
    doc = SimpleDocTemplate(out_path, pagesize=landscape(LETTER), title=title)

    header = ["Day/Slot"] + tt.slot_names
    data: List[List[str]] = [header]
    grid = tt.as_grid()

    for day in tt.days:
        row = [day]
        for slot in tt.slot_names:
            if slot in grid[day]:
                a = grid[day][slot]
                row.append(f"{a.subject_id}\n({a.teacher_id})")
            else:
                row.append("")
        data.append(row)

    elements = []
    
    # Header with HITK logo
    try:
        logo_url = "https://lh3.googleusercontent.com/d/1LBhx-x_Si1-cmGqsRAVmheoz0tXvJ3UN"
        response = requests.get(logo_url, timeout=10)
        if response.status_code == 200:
            logo_img = Image(BytesIO(response.content), width=60, height=60)
            logo_img.hAlign = 'CENTER'
            elements.append(logo_img)
            elements.append(Spacer(1, 10))
    except:
        pass  # Continue without logo if download fails
    

    elements.append(Spacer(1, 12))
    
    elements.append(Paragraph(f"<b>{title} - {tt.class_name}</b>", styles["Heading2"]))
    elements.append(Spacer(1, 12))

    table = Table(data, repeatRows=1)
    table.setStyle(TableStyle([
        ("BACKGROUND", (0, 0), (-1, 0), colors.lightgrey),
        ("TEXTCOLOR", (0, 0), (-1, 0), colors.black),
        ("ALIGN", (0, 0), (-1, -1), "CENTER"),
        ("VALIGN", (0, 0), (-1, -1), "MIDDLE"),
        ("GRID", (0, 0), (-1, -1), 0.5, colors.grey),
        ("FONTNAME", (0, 0), (-1, 0), "Helvetica-Bold"),
        ("FONTSIZE", (0, 0), (-1, -1), 10),
        ("ROWBACKGROUNDS", (0, 1), (-1, -1), [colors.whitesmoke, colors.lightcyan]),
    ]))

    elements.append(table)
    elements.append(Spacer(1, 20))
    
    # Add footer
    footer_text = "Generated by EduSchedule AI - Multi-Agent Timetable Management System"
    elements.append(Paragraph(f"<i>{footer_text}</i>", styles["Normal"]))
    
    doc.build(elements)
